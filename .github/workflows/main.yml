name: CI

on:
  push:
    branches: ["**"] # run for every branch
  pull_request:
    branches: ["**"]
  workflow_call:

jobs:
  test:
    runs-on: ubuntu-22.04

    # Same Mesa-headless settings as in the Dockerfile
    env:
      GOPATH: /home/runner/go
      LIBGL_DRIVERS_PATH: /usr/lib/x86_64-linux-gnu/dri
      GALLIUM_DRIVER: llvmpipe
      LIBGL_ALWAYS_SOFTWARE: "true"
      EGL_PLATFORM: surfaceless
      MESA_GL_VERSION_OVERRIDE: "4.6"

    steps:
      # ✨ Source code & Go toolchain
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        with:
          go-version: stable

      # ✨ System packages
      - name: Install build-time & runtime deps
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends \
            git curl ca-certificates build-essential python3 pkg-config \
            ffmpeg \
            libegl1 libegl1-mesa-dev libgl1-mesa-dev libglx-mesa0 \
            libgl1-mesa-dri mesa-utils \
            libglfw3-dev \
            libx11-dev libxcursor-dev libxi-dev \
            libxinerama-dev libxrandr-dev libxxf86vm-dev \
            libusb-1.0-0-dev libfreenect-dev  # still needed for “kinect” tag

      # ✨ Go dependencies & static checks
      - name: Download Go modules
        run: go mod download

      - name: Ensure go.mod / go.sum are tidy
        run: |
          go mod tidy
          git diff --exit-code go.mod
          git diff --exit-code go.sum

      - name: Lint & format
        run: |
          go install golang.org/x/lint/golint@latest
          gofmt -s -d .
          "$GOPATH/bin/golint" -min_confidence 0.3 $(go list ./...)

      # ✨ Build & test
      - name: Build
        run: go build -tags kinect ./cmd/shady/

      - name: Test
        run: go test -v -race -cover ./...
